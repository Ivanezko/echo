on:
  push:
    branches:
      - main
    paths:
      - 'main.go'
      - 'go.mod'
      - 'go.sum'
      - 'Dockerfile'
      - 'k8s/prod.yaml'
      - '.github/workflows/prod.yml'

jobs:

  build:
    name: Deploy to k8s cluster PROD
    runs-on: ubuntu-latest
    steps:

    - name: Checkout main branch
      uses: actions/checkout@v2
      with:
        ref: main

    - name: Update SHA
      run: echo $GITHUB_SHA > $GITHUB_WORKSPACE/.github-sha

    - name: Update Dockerfile
      run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<GITHUB-SHA>|'${TAG}'|' $GITHUB_WORKSPACE/Dockerfile

    - name: Build container image
      run: docker build -t registry.digitalocean.com/stalkerwebber/echo-prod:$(echo $GITHUB_SHA | head -c7) .

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Push image to DigitalOcean Container Registry
      run: docker push registry.digitalocean.com/stalkerwebber/echo-prod:$(echo $GITHUB_SHA | head -c7)

    - name: Update deployment file
      run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|registry.digitalocean.com/stalkerwebber/echo-prod:'${TAG}'|' $GITHUB_WORKSPACE/k8s/prod.yaml

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-stalker

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f $GITHUB_WORKSPACE/k8s/prod.yaml

    - name: Verify deployment
      run: kubectl rollout status --namespace=prod deployment/echo
